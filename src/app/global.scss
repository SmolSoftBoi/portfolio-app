// Option B: Include parts of Bootstrap Extensions

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import '@smolpack/bootstrap-extensions/scss/functions';

// 2. Include any default variable overrides here
$primary: #53a817;
$secondary: #b0b0b4;

$color-mode-type: media-query;

$enable-shadows: true;
$enable-cssgrid: true;

$font-family-sans-serif: 'Roboto', sans-serif;

$box-shadow-dark: 0 0.5rem 1rem rgba($primary, 0.15);
$box-shadow-sm-dark: 0 0.125rem 0.25rem rgba($primary, 0.075);
$box-shadow-lg-dark: 0 1rem 3rem rgba($primary, 0.175);
$box-shadow-inset-dark: inset 0 1px 2px rgba($primary, 0.075);

$profile-header-media-object-width: auto;
$profile-header-media-object-width-sm: auto;

// 3. Include remainder of required Bootstrap stylesheets
@import '@smolpack/bootstrap-extensions/scss/variables';
@import '@smolpack/bootstrap-extensions/scss/variables-dark';

// 4. Include any default map overrides here
$profile-header-container-inner-width: $profile-header-container-inner-width *
  1.3;

// 5. Include remainder of required parts
@import '@smolpack/bootstrap-extensions/scss/maps';
@import '@smolpack/bootstrap-extensions/scss/mixins';
@import '@smolpack/bootstrap-extensions/scss/root';

// 6. Optionally include any other parts as needed
@import '@smolpack/bootstrap-extensions/scss/utilities';
@import '@smolpack/bootstrap-extensions/scss/bootstrap-extensions';

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import 'bootstrap/scss/utilities/api';

// 8. Add additional custom code here
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;200;300;400;500;600;700;800;900&display=swap');

h1,
h2 {
  font-weight: bold;
  margin-bottom: 1rem;
}

ol ul {
  margin-bottom: 1rem;
}

@include color-mode(dark, true) {
  color-scheme: dark;

  --#{$prefix}box-shadow: #{$box-shadow-dark};
  --#{$prefix}box-shadow-sm: #{$box-shadow-sm-dark};
  --#{$prefix}box-shadow-lg: #{$box-shadow-lg-dark};
  --#{$prefix}box-shadow-inset: #{$box-shadow-inset-dark};
}

.profile-header {
  background-color: $primary;
  border-bottom: solid map-get($map: $border-widths, $key: 5);
  border-color: $profile-header-nav-link-hover-color;
  box-shadow: var(--#{$prefix}box-shadow-lg);
}

.profile-header-user {
  word-break: keep-all;
  font-size: 2rem;
}

.card {
  border-width: 0;
  box-shadow: var(--#{$prefix}box-shadow);
  transition: $transition-base;

  &:hover {
    box-shadow: var(--#{$prefix}box-shadow-lg);
    transform: scale(1.05);
  }
}

.card-profile-img {
  background: $profile-header-nav-link-hover-color;
  box-shadow: none;
  height: auto;
  margin-left: auto;
  margin-right: auto;
}

.carousel {
  border-radius: $border-radius-lg;
  box-shadow: inset var(--#{$prefix}box-shadow-lg);
}

.carousel-item {
  > .block {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 20rem;
  }
}

.carousel-indicators {
  [data-bs-target] {
    background-color: $primary;
    border-color: $primary;
    border-width: 1px;
    box-shadow: var(--#{$prefix}box-shadow);
    transition: $transition-base;

    &:hover {
      box-shadow: var(--#{$prefix}box-shadow-sm);
    }

    &.active {
      box-shadow: none;
    }
  }
}

.bg-primary {
  color: $profile-header-nav-link-hover-color;
}

.btn {
  box-shadow: var(--#{$prefix}box-shadow);
  transition: $transition-base;

  &:hover,
  &.active {
    box-shadow: var(--#{$prefix}box-shadow-sm);
    transform: scale(0.95);
  }
}

.btn-primary {
  color: $profile-header-nav-link-hover-color;

  &:hover {
    color: $profile-header-nav-link-hover-color;
  }
}

.row.align-items-stretch {
  .card {
    height: 100%;
  }
}

// Timeline Component Style
.timeline {
  position: relative;
  padding-left: map-get($map: $border-widths, $key: 5) * 5;

  &:before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: map-get($map: $border-widths, $key: 5) * 2;
    width: map-get($map: $border-widths, $key: 5);
    background-color: $gray-500;
  }

  .card {
    box-shadow: var(--#{$prefix}box-shadow-sm);
    transform-origin: left;
    transition: $transition-base;

    &:hover {
      box-shadow: var(--#{$prefix}box-shadow);
    }
  }
}

.timeline-item {
  position: relative;
  margin-bottom: $spacer;

  &::after {
    content: '';
    position: absolute;
    left: -(map-get($map: $border-widths, $key: 5) * 4);
    top: 50%;
    width: map-get($map: $border-widths, $key: 5) * 3;
    height: map-get($map: $border-widths, $key: 5) * 3;
    background-color: $primary;
    border: map-get($map: $border-widths, $key: 5) solid
      $profile-header-nav-link-hover-color;
    border-radius: 50%;
    box-shadow: var(--#{$prefix}box-shadow-sm);
    z-index: 1;
    transform: translateY(-50%);
  }

  .card {
    position: relative;
    z-index: 2;

    &::after {
      content: '';
      position: absolute;
      left: -($profile-header-nav-active-border-width * 2);
      top: 50%;
      border: $profile-header-nav-active-border-width solid transparent;
      border-right-color: var(--bs-card-bg);
      transform: translateY(-50%);
    }
  }
}
